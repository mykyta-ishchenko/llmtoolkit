name: Create and publish a Docker image

on:
  push:
    branches: ['main']

permissions:
  contents: write
  packages: write

jobs:
  lint:
    name: Check linters
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.read_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: make install-linters

      - name: Run linters
        run: make lint-no-poetry

      - name: Read project version
        id: read_version
        run: |
          pip install poetry
          VERSION=$(poetry version --short)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"


  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: lint
    env:
      TAG_VERSION: ${{ needs.lint.outputs.version }}
    steps:
      - name: Create tag
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${{ env.TAG_VERSION }}`,
              sha: context.sha,
            });

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_VERSION }}
          release_name: Release v${{ env.TAG_VERSION }}
          draft: false
          prerelease: false
